options {
  STATIC=false;
  JDK_VERSION = "1.8";
}

PARSER_BEGIN(GeneratedJavaDocParser)

class GeneratedJavaDocParser {
    public static void main(String args[]) throws ParseException {
      GeneratedJavaDocParser parser = new GeneratedJavaDocParser(System.in);
      parser.Start();
    }
}

PARSER_END(GeneratedJavaDocParser)

/* WHITE SPACE */

SPECIAL_TOKEN :
{
  <SPACE: [" ", "\t", "\f", "\u0085", "\u00A0", "\u1680", "\u180e", "\u2000", "\u2001", "\u2002", "\u2003", "\u2004", "\u2005",
      "\u2006", "\u2007", "\u2008", "\u2009", "\u200a", "\u200b", "\u200c", "\u200d", "\u2028", "\u2029", "\u202f", "\u205f", "\u2060", "\u3000", "\ufeff"]>
| <WINDOWS_EOL : "\r\n">
| <UNIX_EOL: "\n">
| <OLD_MAC_EOL: "\r">
}

TOKEN:
{
  <STAR: "*" ~["/"]>
| <SLASH: "/">
| <TEXT: (["a"-"z", "A"-"Z", "0"-"9", ".", ",", ":", "_", "(", ")", "{", "}", "#", "=", "-"])+ >
| <TAG:
    "@author"
  | "@version"
  | "@since"
  | "@see"
  | "@param"
  | "@return"
  | "@exception"
  | "@throws"
  | "@deprecated"
  | "@InheritDoc"
  | "@link"
  | "@value"
  | "@" <TEXT>
  >
}

TOKEN :
{
  <ENTER_JAVADOC_COMMENT: "/**" ~["/"]>
|
  <END_JAVADOC_COMMENT: "*/" >
}

void Start():
{}
{
  <ENTER_JAVADOC_COMMENT> JavaLine()
  { System.out.println("Success parse Javadoc"); }
}

void JavaLine():
{}
{
  (<STAR> | <TAG> | <TEXT> | <SLASH> | HtmlTagHead()) ContinueComment() <END_JAVADOC_COMMENT>
  |
  <END_JAVADOC_COMMENT>
}

void ContinueComment():
{}
{
  (<STAR> | <TAG> | <TEXT> | <SLASH> | HtmlTagHead())*
}

void HtmlTagHead():
{}
{
  "<" HtmlTag()
}

void HtmlTag():
{}
{
  LOOKAHEAD(2)
  <TEXT> ">" (<TEXT> | <SLASH> | HtmlTagHead())* "</" <TEXT> ">"
  | 
  <TEXT> "/>"
}